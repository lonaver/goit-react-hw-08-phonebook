{"version":3,"file":"static/js/260.2d71401f.chunk.js","mappings":"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","sources":["redux/selectors.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getTasks = state => state.contacts.contacts;\n\nexport const getFilter = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Blocks } from 'react-loader-spinner';\nimport { toast } from 'react-hot-toast';\n\nimport { getTasks } from 'redux/selectors';\nimport { addContact } from '../../ContactsAPI';\n\nimport styles from './ContactForm.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(getTasks);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.elements.name.value;\n    const phone = e.target.elements.number.value;\n    const normoliseName = name.toLowerCase();\n    const contactFind = items.find(\n      contact => contact.name.toLowerCase() === normoliseName\n    );\n\n    if (contactFind) {\n      toast.error(\n        `${contactFind.name} is alredy contact with phone ${contactFind.number}`\n      );\n      return;\n    }\n    const contactFindPhone = items.find(contact => contact.phone === phone);\n    if (contactFindPhone) {\n      toast.error(\n        `${contactFindPhone.name} is alredy contact with phone ${contactFindPhone.number}`\n      );\n      return;\n    }\n    dispatch(addContact({ name, number: phone }));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={stylesApp.label_input}>\n        Name\n        <input\n          className={stylesApp.field}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\" className={stylesApp.label_input}>\n        Number\n        <input\n          className={stylesApp.field}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={stylesApp.btn}>\n        {isLoading ? (\n          <Blocks\n            visible={true}\n            height=\"20\"\n            width=\"20\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n          />\n        ) : (\n          'Add'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemAbonent\":\"ContactItem_itemAbonent__ADfer\",\"item_contact\":\"ContactItem_item_contact__McLDe\",\"text_contact\":\"ContactItem_text_contact__9dwcb\",\"accent_text\":\"ContactItem_accent_text__GfMAt\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Blocks } from 'react-loader-spinner';\n\nimport { getTasks } from 'redux/selectors';\nimport { deleteContact } from '../../ContactsAPI';\n\nimport styles from './ContactItem.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst ContactItem = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(getTasks);\n\n  const handleDelete = idContact => {\n    dispatch(deleteContact(idContact));\n  };\n\n  return (\n    <li className={styles.item_contact}>\n      <div className={styles.text_contact}>\n        <span>{name} </span>\n        <span className={styles.accent_text}>{phone}</span>\n      </div>\n      <button\n        type=\"button\"\n        className={stylesApp.btn}\n        disabled={isLoading ? true : false}\n        onClick={() => handleDelete(id)}\n      >\n        {isLoading ? (\n          <Blocks\n            visible={true}\n            height=\"20\"\n            width=\"20\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n          />\n        ) : (\n          'delete'\n        )}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listAbonent\":\"ContactList_listAbonent__Fr2Ku\"};","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTasks, getFilter } from 'redux/selectors';\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport { fetchContacts } from '../../ContactsAPI';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(getTasks);\n  const { filter } = useSelector(getFilter);\n\n  const [visibleContacts, setVisibleContacts] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const normoliseFilter = filter.toString().toLowerCase();\n    setVisibleContacts(\n      items.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normoliseFilter) ||\n          number.toLowerCase().includes(normoliseFilter)\n      )\n    );\n  }, [filter, items]);\n\n  return (\n    <div className={styles.listAbonent}>\n      {isLoading && <span>Loading...</span>}\n      {error ? (\n        <span>Something wrong... </span>\n      ) : (\n        visibleContacts.map(({ name, number: phone, id }, index) => (\n          <ContactItem name={name} phone={phone} id={id} key={index} />\n        ))\n      )}\n    </div>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_wrapper\":\"Filter_filter_wrapper__wbaT1\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\n\nimport styles from './Filter.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={styles.filter_wrapper}>\n      <label className={stylesApp.label_input}>\n        Filter\n        <input className={stylesApp.field} type=\"text\" onChange={onChange} />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTasks } from 'redux/selectors';\n//import { getContactsThunk } from '../thunk/thunk';\nimport { fetchContacts } from '../ContactsAPI';\n\nimport styles from '../components/App.module.css';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const { items } = useSelector(getTasks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.contacts}>\n      <h1>Phone book</h1>\n      <ContactForm></ContactForm>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      {items.length > 0 && <ContactList></ContactList>}\n    </div>\n  );\n}\n"],"names":["getTasks","state","contacts","getFilter","filters","dispatch","useDispatch","useSelector","items","isLoading","className","styles","onSubmit","e","preventDefault","name","target","elements","value","phone","number","normoliseName","toLowerCase","contactFind","find","contact","toast","contactFindPhone","addContact","currentTarget","reset","htmlFor","stylesApp","type","pattern","title","required","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","id","disabled","onClick","idContact","deleteContact","error","filter","useState","visibleContacts","setVisibleContacts","useEffect","fetchContacts","normoliseFilter","toString","includes","map","index","onChange","setFilter","Contacts","length"],"sourceRoot":""}