{"version":3,"file":"static/js/260.bab6a357.chunk.js","mappings":"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","sources":["redux/selectors.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getTasks = state => state.contacts.contacts;\n\nexport const getFilter = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Blocks } from 'react-loader-spinner';\nimport { toast } from 'react-hot-toast';\n\nimport { getTasks } from 'redux/selectors';\nimport { addContact } from '../../ContactsAPI';\n\nimport styles from './ContactForm.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(getTasks);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  useEffect(() => {\n    if (isLoading) {\n      setName('');\n      setPhone('');\n    }\n  }, [isLoading, dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const normoliseName = name.toLowerCase();\n    const contactFind = items.find(\n      contact => contact.name.toLowerCase() === normoliseName\n    );\n\n    if (contactFind) {\n      toast.error(\n        `${contactFind.name} is alredy contact with phone ${contactFind.number}`\n      );\n      return;\n    }\n    const contactFindPhone = items.find(contact => contact.phone === phone);\n    if (contactFindPhone) {\n      toast.error(\n        `${contactFindPhone.name} is alredy contact with phone ${contactFindPhone.number}`\n      );\n      return;\n    }\n    dispatch(addContact({ name, number: phone }));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={stylesApp.label_input}>\n        Name\n        <input\n          className={stylesApp.field}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </label>\n      <label htmlFor=\"number\" className={stylesApp.label_input}>\n        Number\n        <input\n          className={stylesApp.field}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\" className={stylesApp.btn}>\n        {isLoading ? (\n          <Blocks\n            visible={true}\n            height=\"20\"\n            width=\"20\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n          />\n        ) : (\n          'Add'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"itemAbonent\":\"ContactItem_itemAbonent__ADfer\",\"item_contact\":\"ContactItem_item_contact__McLDe\",\"text_contact\":\"ContactItem_text_contact__9dwcb\",\"accent_text\":\"ContactItem_accent_text__GfMAt\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Blocks } from 'react-loader-spinner';\n\nimport { deleteContact } from '../../ContactsAPI';\n\nimport styles from './ContactItem.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst ContactItem = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(\n    state => state.contacts.contacts[id]?.isLoading\n  );\n\n  const handleDelete = idContact => {\n    dispatch(deleteContact(idContact));\n  };\n\n  return (\n    <li className={styles.item_contact}>\n      <div className={styles.text_contact}>\n        <span>{name} </span>\n        <span className={styles.accent_text}>{phone}</span>\n      </div>\n      <button\n        type=\"button\"\n        className={stylesApp.btn}\n        disabled={isLoading ? true : false}\n        onClick={() => handleDelete(id)}\n      >\n        {isLoading ? (\n          <Blocks\n            visible={true}\n            height=\"20\"\n            width=\"20\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n          />\n        ) : (\n          'delete'\n        )}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listAbonent\":\"ContactList_listAbonent__Fr2Ku\"};","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTasks, getFilter } from 'redux/selectors';\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport { fetchContacts } from '../../ContactsAPI';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(getTasks);\n  const { filter } = useSelector(getFilter);\n\n  const [visibleContacts, setVisibleContacts] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const normoliseFilter = filter.toString().toLowerCase();\n    setVisibleContacts(\n      items.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normoliseFilter) ||\n          number.toLowerCase().includes(normoliseFilter)\n      )\n    );\n  }, [filter, items]);\n\n  return (\n    <div className={styles.listAbonent}>\n      {isLoading && <span>Loading...</span>}\n      {error ? (\n        <span>Something wrong... </span>\n      ) : (\n        visibleContacts.map(({ name, number: phone, id }, index) => (\n          <ContactItem name={name} phone={phone} id={id} key={index} />\n        ))\n      )}\n    </div>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_wrapper\":\"Filter_filter_wrapper__wbaT1\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\n\nimport styles from './Filter.module.css';\nimport stylesApp from '../../components/App.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={styles.filter_wrapper}>\n      <label className={stylesApp.label_input}>\n        Filter\n        <input className={stylesApp.field} type=\"text\" onChange={onChange} />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTasks } from 'redux/selectors';\n//import { getContactsThunk } from '../thunk/thunk';\nimport { fetchContacts } from '../ContactsAPI';\n\nimport styles from '../components/App.module.css';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const { items } = useSelector(getTasks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.contacts}>\n      <h1>Phone book</h1>\n      <ContactForm></ContactForm>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      {items.length > 0 && <ContactList></ContactList>}\n    </div>\n  );\n}\n"],"names":["getTasks","state","contacts","getFilter","filters","dispatch","useDispatch","useSelector","items","isLoading","useState","name","setName","phone","setPhone","useEffect","className","styles","onSubmit","e","preventDefault","normoliseName","toLowerCase","contactFind","find","contact","toast","number","contactFindPhone","addContact","htmlFor","stylesApp","type","pattern","title","required","value","onChange","target","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","id","disabled","onClick","idContact","deleteContact","error","filter","visibleContacts","setVisibleContacts","fetchContacts","normoliseFilter","toString","includes","map","index","currentTarget","setFilter","Contacts","length"],"sourceRoot":""}